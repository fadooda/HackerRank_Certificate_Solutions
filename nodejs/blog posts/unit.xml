<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="1.7260" tests="13" failures="0">
  <testsuite name="Root Suite" timestamp="2021-01-18T22:46:16" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="blog_posts_api_medium" timestamp="2021-01-18T22:46:16" tests="13" file="C:\Users\fady3\Documents\react_hackerrank\nodejs\36_6e_4e71_929e_479e_bdb7_f0116ece650b_master\test\index.spec.js" time="1.7260" failures="0">
    <testcase name="blog_posts_api_medium should create a published post" time="0.2380" classname="should create a published post">
    </testcase>
    <testcase name="blog_posts_api_medium should create an unpublished post" time="0.0500" classname="should create an unpublished post">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all the posts" time="0.2950" classname="should fetch all the posts">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all the posts if the isPublished filter value does not exist" time="0.3310" classname="should fetch all the posts if the isPublished filter value does not exist">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all posts for an author" time="0.1490" classname="should fetch all posts for an author">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch no posts if author filter value does not exist" time="0.1390" classname="should fetch no posts if author filter value does not exist">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all published posts for an author" time="0.1670" classname="should fetch all published posts for an author">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all unpublished posts for an author" time="0.1710" classname="should fetch all unpublished posts for an author">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch a single post" time="0.0450" classname="should fetch a single post">
    </testcase>
    <testcase name="blog_posts_api_medium should get 404 if the post ID does not exist" time="0.0130" classname="should get 404 if the post ID does not exist">
    </testcase>
    <testcase name="blog_posts_api_medium should get 405 for a put request to /posts/:id" time="0.0390" classname="should get 405 for a put request to /posts/:id">
    </testcase>
    <testcase name="blog_posts_api_medium should get 405 for a patch request to /posts/:id" time="0.0400" classname="should get 405 for a patch request to /posts/:id">
    </testcase>
    <testcase name="blog_posts_api_medium should get 405 for a delete request to /posts/:id" time="0.0490" classname="should get 405 for a delete request to /posts/:id">
    </testcase>
  </testsuite>
</testsuites>